// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: auth_code.sql

package repository

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const createAuthCode = `-- name: CreateAuthCode :one
INSERT INTO auth_codes (client_id, user_id, auth_code_hash, redirect_uri, scopes, expires_at)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING auth_code_id, user_id, client_id, auth_code_hash, redirect_uri, scopes, revoked, expires_at, created_at, updated_at
`

type CreateAuthCodeParams struct {
	ClientID     uuid.NullUUID `json:"client_id"`
	UserID       uuid.NullUUID `json:"user_id"`
	AuthCodeHash string        `json:"auth_code_hash"`
	RedirectUri  string        `json:"redirect_uri"`
	Scopes       []string      `json:"scopes"`
	ExpiresAt    time.Time     `json:"expires_at"`
}

func (q *Queries) CreateAuthCode(ctx context.Context, arg CreateAuthCodeParams) (AuthCode, error) {
	row := q.db.QueryRowContext(ctx, createAuthCode,
		arg.ClientID,
		arg.UserID,
		arg.AuthCodeHash,
		arg.RedirectUri,
		pq.Array(arg.Scopes),
		arg.ExpiresAt,
	)
	var i AuthCode
	err := row.Scan(
		&i.AuthCodeID,
		&i.UserID,
		&i.ClientID,
		&i.AuthCodeHash,
		&i.RedirectUri,
		pq.Array(&i.Scopes),
		&i.Revoked,
		&i.ExpiresAt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
